apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.ivianuu'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ['autovaluegson.defaultCollectionsToEmpty': 'true']
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // Android Support
    api rootProject.ext.supportAnnotations

    // AutoValue
    provided rootProject.ext.autoValue
    annotationProcessor rootProject.ext.autoValue

    // AutoValue Gson
    provided rootProject.ext.autoValueGson
    annotationProcessor rootProject.ext.autoValueGson

    // AutoValue Parcel
    provided rootProject.ext.autoValueParcelAdapter
    annotationProcessor rootProject.ext.autoValueParcel

    // Gson
    api rootProject.ext.gson

    // Retrofit
    api rootProject.ext.retrofit
    api rootProject.ext.retrofitGsonConverter
    api rootProject.ext.retrofitRxJavaAdapter

    // Ok http
    api rootProject.ext.okHttp
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
